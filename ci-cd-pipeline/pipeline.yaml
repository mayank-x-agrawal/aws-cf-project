AWSTemplateFormatVersion: '2010-09-09'
Description: CI/CD Pipeline for deploying a CloudFormation template from a GitHub repository using SSM Parameters.

Parameters:
  GitHubOwnerParameterName:
    Type: String
    Default: /codepipeline/github/owner
    Description: The name of the SSM parameter for the GitHub repository owner.
  GitHubRepoParameterName:
    Type: String
    Default: /codepipeline/github/repo
    Description: The name of the SSM parameter for the GitHub repository name.
  GitHubBranchParameterName:
    Type: String
    Default: /codepipeline/github/branch
    Description: The name of the SSM parameter for the GitHub branch.
  GitHubTokenParameterName:
    Type: String
    Default: /codepipeline/github/token
    Description: The name of the SSM parameter for the GitHub Personal Access Token.
  StackName:
    Type: String
    Description: The name of the CloudFormation stack to create/update.
  TemplateFilePath:
    Type: String
    Description: The path to the CloudFormation template file within the repository (e.g., my-template.yaml).

Resources:
  Pipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      RoleArn: !GetAtt CodePipelineServiceRole.Arn
      ArtifactStore:
        Type: S3
        Location: !Ref PipelineArtifactBucket
      Stages:
        - Name: Source
          Actions:
            - Name: Source
              ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Provider: GitHub
                Version: '1'
              OutputArtifacts:
                - Name: SourceOutput
              Configuration:
                Owner: !Sub '{{resolve:ssm:${GitHubOwnerParameterName}}}'
                Repo: !Sub '{{resolve:ssm:${GitHubRepoParameterName}}}'
                Branch: !Sub '{{resolve:ssm:${GitHubBranchParameterName}}}'
                PollForSourceChanges: true
                OAuthToken: !Sub '{{resolve:ssm-secure:${GitHubTokenParameterName}}}'

        - Name: CreateChangeSet
          Actions:
            - Name: CreateChangeSet
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: '1'
              InputArtifacts:
                - Name: SourceOutput
              Configuration:
                ActionMode: CHANGE_SET_REPLACE
                StackName: !Ref StackName
                ChangeSetName: !Sub '${StackName}-changeset'
                TemplatePath: !Sub 'SourceOutput::${TemplateFilePath}'
                RoleArn: !GetAtt CloudFormationServiceRole.Arn

        - Name: ApproveChangeSet
          Actions:
            - Name: ApproveChangeSet
              ActionTypeId:
                Category: Approval
                Owner: AWS
                Provider: Manual
                Version: '1'
              Configuration:
                CustomData: !Sub |
                  Manual approval required to deploy the change set for stack ${StackName}.
                  Review the change set named ${StackName}-changeset.
                  Once approved, the pipeline will execute the change set.

        - Name: DeployChangeSet
          Actions:
            - Name: DeployChangeSet
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: '1'
              InputArtifacts:
                - Name: SourceOutput
              Configuration:
                ActionMode: CHANGE_SET_EXECUTE
                StackName: !Ref StackName
                ChangeSetName: !Sub '${StackName}-changeset'
                RoleArn: !GetAtt CloudFormationServiceRole.Arn

  PipelineArtifactBucket:
    Type: AWS::S3::Bucket
    Properties:
      VersioningConfiguration:
        Status: Enabled

  CodePipelineServiceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: codepipeline.amazonaws.com
            Action: sts:AssumeRole
      Path: "/"
      Policies:
        - PolicyName: CodePipelineServicePolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:GetObjectVersion
                  - s3:GetBucketVersioning
                  - s3:PutObject
                Resource:
                  - !GetAtt PipelineArtifactBucket.Arn
                  - !Sub '${PipelineArtifactBucket.Arn}/*'
              - Effect: Allow
                Action:
                  - "cloudformation:CreateStack"
                  - "cloudformation:DeleteStack"
                  - "cloudformation:DescribeStacks"
                  - "cloudformation:UpdateStack"
                  - "cloudformation:CreateChangeSet"
                  - "cloudformation:DescribeChangeSet"
                  - "cloudformation:ExecuteChangeSet"
                  - "cloudformation:DescribeStackEvents"
                  - "iam:PassRole"
                Resource: '*'
              - Effect: Allow
                Action:
                  - ssm:GetParameters
                Resource: !Sub 'arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/*'

  CloudFormationServiceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: cloudformation.amazonaws.com
            Action: sts:AssumeRole
      Path: "/"
      Policies:
        - PolicyName: CloudFormationServicePolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - "*"
                Resource: "*"
              - Effect: Allow
                Action:
                  - iam:PassRole
                Resource: !GetAtt CodePipelineServiceRole.Arn